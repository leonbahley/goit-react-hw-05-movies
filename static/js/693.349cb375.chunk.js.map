{"version":3,"file":"static/js/693.349cb375.chunk.js","mappings":"6NACaA,E,OAAOC,GAAAA,GAAH,6C,SCIF,SAASC,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAnD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAwBR,OArBAE,EAAAA,EAAAA,YAAU,WACRC,MAAM,wCAAD,OACqCH,EADrC,4BAHQ,qCAMVI,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,uBACjB,IACAJ,MAAK,YAAkB,IAAfK,EAAc,EAAdA,QACPV,EACEU,EAAQC,KAAI,SAAAC,GAAI,MAAK,CACnBC,KAAMD,EAAKE,OACXC,QAASH,EAAKG,QACdd,GAAIW,EAAKX,GAHK,IAMnB,IACAe,OAAM,SAAAC,GAAG,OAAIC,MAAMD,EAAV,GACb,GAAE,CAAChB,KAEF,8BAC2B,IAAxBF,EAAaoB,QACZ,SAACxB,EAAD,UACGI,EAAaY,KAAI,gBAAGE,EAAH,EAAGA,KAAME,EAAT,EAASA,QAASd,EAAlB,EAAkBA,GAAlB,OAChB,2BACE,0BACE,iBAAMmB,MAAO,CAAEC,WAAY,KAA3B,sBADF,IACqDR,MAErD,uBAAIE,MAJG,GAAKd,EADE,OAUpB,kEAIP,C","sources":["pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const List = styled.ul`\n  list-style: none;\n`;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List } from 'pages/Reviews/Reviews.styled';\n\nexport default function Reviews() {\n  const [movieReviews, setMovieReviews] = useState([{}]);\n  const { id } = useParams();\n  const APIKey = '0729fc5ff166ac1f365f9bc4f7e8ce78';\n\n  useEffect(() => {\n    fetch(\n      `  https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${APIKey}`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Something went wrong');\n      })\n      .then(({ results }) => {\n        setMovieReviews(\n          results.map(item => ({\n            name: item.author,\n            content: item.content,\n            id: item.id,\n          }))\n        );\n      })\n      .catch(err => alert(err));\n  }, [id]);\n  return (\n    <>\n      {movieReviews.length !== 0 ? (\n        <List>\n          {movieReviews.map(({ name, content, id }) => (\n            <li key={'' + id}>\n              <p>\n                <span style={{ fontWeight: 500 }}>Author: </span> {name}\n              </p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <p>We do not have reviews for this movie</p>\n      )}\n    </>\n  );\n}\n"],"names":["List","styled","Reviews","useState","movieReviews","setMovieReviews","id","useParams","useEffect","fetch","then","response","ok","json","Error","results","map","item","name","author","content","catch","err","alert","length","style","fontWeight"],"sourceRoot":""}