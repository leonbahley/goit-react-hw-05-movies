{"version":3,"file":"static/js/33.3c81b115.chunk.js","mappings":"mPAGaA,EAAUC,EAAAA,GAAAA,IAAH,qEAKPC,EAAWD,EAAAA,GAAAA,IAAH,yCAIRE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kKAYVI,GAAWJ,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,2M,kBCjBN,SAASK,IAAgB,IAAD,QAC/BC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACrCC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,MAGAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,wCAAD,OAAyCR,EAAzC,oBAHQ,qCAIVS,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,uBACjB,IACAJ,MACC,YAAsE,IAAnEK,EAAkE,EAAlEA,YAAaC,EAAqD,EAArDA,eAAgBC,EAAqC,EAArCA,SAAUX,EAA2B,EAA3BA,OAAQY,EAAmB,EAAnBA,aAChDb,EAAgB,CACdc,IAAI,kCAAD,OAAoCJ,GACvCK,UAAWJ,EACXC,SAAUA,EAEVI,MAAOH,IAEa,IAAlBZ,EAAOgB,OACTf,EAAUD,EAAOiB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,KAE1BlB,EAAU,CAAC,sCAEd,IAEFmB,OAAM,SAAAC,GAAG,OAAIC,MAAMD,EAAV,GACb,GAAE,CAAC1B,IACJ,IAAQkB,EAAoCf,EAApCe,IAAKC,EAA+BhB,EAA/BgB,UAAWH,EAAoBb,EAApBa,SAAUI,EAAUjB,EAAViB,MAElC,OACE,iCACE,UAAChC,EAAD,CACEwC,MAAO,CACLC,cAAe,MACfC,IAAK,GACLC,aAAc,kBACdC,cAAe,GALnB,WAQE,UAAC5C,EAAD,YACE,UAACK,EAAD,CAAUwC,GAAIpC,EAAd,WACE,SAAC,MAAD,IADF,sBAIA,SAACP,EAAD,CACE4C,IACU,wCAARhB,EACIA,EACA,sCAENiB,IAAKhB,QAIT,UAAC/B,EAAD,YACE,wBAAK+B,KACL,wCAAgBC,MAChB,sCACA,uBAAIJ,KACJ,oCACA,uBAAIX,EAAO+B,KAAK,eAGpB,6CACA,SAAC7C,EAAD,CACEqC,MAAO,CAAES,YAAa,GACtBJ,GAAG,OACHnC,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAHjC,mBAOA,SAACR,EAAD,CAAY0C,GAAG,UAAUnC,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAAxD,sBAGA,SAAC,EAAAuC,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MovieImg = styled.img`\n  width: 300px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: inherit;\n  font-size: 15px;\n  &:hover {\n    color: grey;\n  }\n  &.active {\n    color: grey;\n  }\n`;\n\nexport const BackLink = styled(NavLink)`\n  text-decoration: none;\n  color: inherit;\n  font-size: 15px;\n  margin-bottom: 3px;\n  display: flex;\n  align-items: center;\n  gap: 3px;\n  &:hover {\n    color: grey;\n  }\n`;\n","import { Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Wrapper, MovieImg, StyledLink, BackLink } from './MovieDetails.styled';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const { id } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [genres, setGenres] = useState([]);\n  const APIKey = '0729fc5ff166ac1f365f9bc4f7e8ce78';\n\n  useEffect(() => {\n    fetch(`  https://api.themoviedb.org/3/movie/${id}?api_key=${APIKey}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Something went wrong');\n      })\n      .then(\n        ({ poster_path, original_title, overview, genres, vote_average }) => {\n          setMovieDetails({\n            img: `https://image.tmdb.org/t/p/w400${poster_path}`,\n            movieName: original_title,\n            overview: overview,\n\n            score: vote_average,\n          });\n          if (genres.length !== 0) {\n            setGenres(genres.map(genre => genre.name));\n          } else {\n            setGenres(['There are no genres for this movie']);\n          }\n        }\n      )\n      .catch(err => alert(err));\n  }, [id]);\n  const { img, movieName, overview, score } = movieDetails;\n\n  return (\n    <>\n      <Wrapper\n        style={{\n          flexDirection: 'row',\n          gap: 15,\n          borderBottom: '1px solid black',\n          paddingBottom: 5,\n        }}\n      >\n        <Wrapper>\n          <BackLink to={backLinkHref}>\n            <AiOutlineArrowLeft /> Back to movies\n          </BackLink>\n\n          <MovieImg\n            src={\n              img !== 'https://image.tmdb.org/t/p/w400null'\n                ? img\n                : 'https://via.placeholder.com/400x600'\n            }\n            alt={movieName}\n          />\n        </Wrapper>\n\n        <Wrapper>\n          <h1>{movieName}</h1>\n          <p>User score: {score}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.join(', ')}</p>\n        </Wrapper>\n      </Wrapper>\n      <h3>Additional info</h3>\n      <StyledLink\n        style={{ marginRight: 5 }}\n        to=\"cast\"\n        state={{ from: location.state?.from }}\n      >\n        Cast\n      </StyledLink>\n      <StyledLink to=\"reviews\" state={{ from: location.state?.from }}>\n        Reviews\n      </StyledLink>\n      <Suspense fallback={<div>Loading info...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["Wrapper","styled","MovieImg","StyledLink","NavLink","BackLink","MovieDetails","location","useLocation","backLinkHref","state","from","id","useParams","useState","movieDetails","setMovieDetails","genres","setGenres","useEffect","fetch","then","response","ok","json","Error","poster_path","original_title","overview","vote_average","img","movieName","score","length","map","genre","name","catch","err","alert","style","flexDirection","gap","borderBottom","paddingBottom","to","src","alt","join","marginRight","Suspense","fallback"],"sourceRoot":""}