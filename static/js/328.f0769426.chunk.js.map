{"version":3,"file":"static/js/328.f0769426.chunk.js","mappings":"wOAEaA,EAAOC,EAAAA,GAAAA,GAAH,uHAQJC,EAAgBD,EAAAA,GAAAA,KAAH,6C,SCLX,SAASE,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAA7C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GA0BR,OAvBAE,EAAAA,EAAAA,YAAU,WACRC,MAAM,wCAAD,OACqCH,EADrC,4BAHQ,qCAMVI,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,uBACjB,IACAJ,MAAK,YAAe,IAAZK,EAAW,EAAXA,KACPV,EACEU,EAAKC,KAAI,SAAAC,GAAI,MAAK,CAChBC,KAAMD,EAAKC,KACXC,UAAWF,EAAKE,UAChBC,IAAI,kCAAD,OAAoCH,EAAKI,cAC5Cf,GAAIW,EAAKX,GAJE,IAOhB,IACAgB,OAAM,SAAAC,GAAG,OAAIC,MAAMD,EAAV,GACb,GAAE,CAACjB,KAGF,8BACwB,IAArBF,EAAUqB,QACT,SAAC1B,EAAD,UACGK,EAAUY,KAAI,gBAAGE,EAAH,EAAGA,KAAME,EAAT,EAASA,IAAKD,EAAd,EAAcA,UAAWb,EAAzB,EAAyBA,GAAzB,OACb,2BACE,gBACEoB,MAAO,CAAEC,MAAO,KAChBC,IACU,wCAARR,EACIA,EACA,sCAENS,IAAKX,KAEP,eACEQ,MAAO,CACLI,OAAQ,GAFZ,SAKGZ,KAEH,eAAGQ,MAAO,CAAEI,OAAQ,GAApB,WACE,SAAC7B,EAAD,0BACCkB,OAnBI,GAAKb,EADD,OA0BjB,+DAIP,C","sources":["pages/Cast/Cast.styled.js","pages/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 0;\n`;\n\nexport const CharacterName = styled.span`\n  font-weight: 500;\n`;\n","import { useParams } from 'react-router-dom';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { List, CharacterName } from './Cast.styled';\n\nexport default function Cast() {\n  const [movieCast, setMovieCast] = useState([{}]);\n  const { id } = useParams();\n  const APIKey = '0729fc5ff166ac1f365f9bc4f7e8ce78';\n\n  useEffect(() => {\n    fetch(\n      `  https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKey}`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Something went wrong');\n      })\n      .then(({ cast }) => {\n        setMovieCast(\n          cast.map(item => ({\n            name: item.name,\n            character: item.character,\n            img: `https://image.tmdb.org/t/p/w400${item.profile_path}`,\n            id: item.id,\n          }))\n        );\n      })\n      .catch(err => alert(err));\n  }, [id]);\n\n  return (\n    <>\n      {movieCast.length !== 0 ? (\n        <List>\n          {movieCast.map(({ name, img, character, id }) => (\n            <li key={'' + id}>\n              <img\n                style={{ width: 150 }}\n                src={\n                  img !== 'https://image.tmdb.org/t/p/w400null'\n                    ? img\n                    : 'https://via.placeholder.com/400x600'\n                }\n                alt={name}\n              />\n              <h4\n                style={{\n                  margin: 0,\n                }}\n              >\n                {name}\n              </h4>\n              <p style={{ margin: 0 }}>\n                <CharacterName>Character: </CharacterName>\n                {character}\n              </p>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <p>We do not have cast for this movie</p>\n      )}\n    </>\n  );\n}\n"],"names":["List","styled","CharacterName","Cast","useState","movieCast","setMovieCast","id","useParams","useEffect","fetch","then","response","ok","json","Error","cast","map","item","name","character","img","profile_path","catch","err","alert","length","style","width","src","alt","margin"],"sourceRoot":""}